# GoHub 配置文件示例

# 版本信息
version: "1.0.0"

# 服务器配置
server:
  addr: ":8083" # HTTP服务监听地址
  hub :
    read_timeout: 60s              # WebSocket读取超时
    write_timeout: 60s             # WebSocket写入超时
    read_buffer_size: 4096         # 读取缓冲区大小 (字节)
    write_buffer_size: 4096        # 写入缓冲区大小 (字节)
    message_buffer_cap: 256        # 消息队列容量 (消息数)
    bus_timeout: 10s               # 消息总线超时

# 集群配置
cluster:
  enabled: true                 # 是否启用集群模式
  bus_type: "redis"              # 消息总线类型: "nats", "redis", "noop"
  
  # NATS配置 (用于集群间通信)
  nats:
    urls:
      - "nats://localhost:4222"
    name: "gohub-client"         # 客户端名称
    reconnect_wait: 2s           # 重连等待时间
    max_reconnects: -1           # 最大重连次数 (-1表示无限)
    connect_timeout: 5s          # 连接超时
    op_timeout: 1s               # 操作超时，从10ms改为1s
    use_jetstream: false         # 是否使用JetStream
    stream_name: "GOHUB"         # JetStream流名称
    consumer_name: "gohub-consumer" # JetStream消费者名称
    message_retention: 1h        # 消息保留时间
    username: ""                 # NATS认证用户名 (可选)
    password: ""                 # NATS认证密码 (可选)
    token: ""                    # NATS认证令牌 (可选)

  # Redis配置 (用于集群间通信)
  redis:
    addrs:
      - "localhost:6379"
    password: ""                 # Redis密码
    db: 0                        # 数据库编号
    master_name: ""              # 哨兵模式的主节点名称
    pool_size: 10                # 连接池大小
    min_conn: 2                  # 最小空闲连接数
    dial_timeout: 5s             # 连接超时
    read_timeout: 3s             # 读取超时
    write_timeout: 3s            # 写入超时
    retry_interval: 200ms        # 重试间隔
    max_retries: 3               # 最大重试次数
    op_timeout: 500ms            # 操作超时
    key_prefix: "gohub:"         # 键前缀
    mode: "single"               # 模式: single(单机), sentinel(哨兵), cluster(集群)

# 认证配置
auth:
  enabled: true                  # 是否启用认证
  secret_key: "your-secret-key-change-this"  # JWT密钥
  issuer: "gohub"                # JWT签发者
  allow_anonymous: true          # 是否允许匿名连接

# 日志配置
log:
  level: "info"                  # 日志级别: debug, info, warn, error
  format: "json"                 # 日志格式: json, text